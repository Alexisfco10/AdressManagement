// <auto-generated />

#nullable disable

using Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AddressManagementDbContext))]
    partial class AddressManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressManagement.Domain.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("addressLine");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("country");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customerId");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("state");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("zipCode");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddressLine = "Bayona",
                            Country = "Dominican Republic",
                            CustomerId = 1L,
                            State = "Santo Domingo",
                            ZipCode = "10903"
                        },
                        new
                        {
                            Id = 2L,
                            AddressLine = "Cliffside Park",
                            Country = "United States",
                            CustomerId = 2L,
                            State = "New Jersey",
                            ZipCode = "07010"
                        },
                        new
                        {
                            Id = 3L,
                            AddressLine = "Las Caobas",
                            Country = "Dominican Republic",
                            CustomerId = 1L,
                            State = "Santo Domingo",
                            ZipCode = "10905"
                        });
                });

            modelBuilder.Entity("AddressManagement.Domain.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthday");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Birthday = new DateTime(2002, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Alexfi2@gmail.com",
                            Name = "Alex Figueroa",
                            PhoneNumber = "8090000000"
                        },
                        new
                        {
                            Id = 2L,
                            Birthday = new DateTime(1995, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gomcarla8@gmail.com",
                            Name = "Carla Gomez",
                            PhoneNumber = "8091111111"
                        },
                        new
                        {
                            Id = 3L,
                            Birthday = new DateTime(1999, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lperez1999@gmail.com",
                            Name = "Luis Perez",
                            PhoneNumber = "8092222222"
                        });
                });

            modelBuilder.Entity("AddressManagement.Domain.Models.Address", b =>
                {
                    b.HasOne("AddressManagement.Domain.Models.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AddressManagement.Domain.Models.Customer", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
